#Configuration file, please copy this to the init_all.py and fill it with your
#variables. init_all.py is added to gitignore.

# All configurations are separated to different sections: 
# general - for general Forge configuration ;)
# ssh - for ssh connection between virtual machines
# kea - for kea configuration
# ISC-DHCP - for ISC-DHCP configurations

 
# =============== GENERAL ===============
# This defines the logging level for the common logger used by this framework
# Possible values are CRITICAL, ERROR, WARNING, INFO and DEBUG and they are
# case insensitive.
LOGLEVEL = "info"

# This defines server type. Allowed values are:
# kea4, kea6, isc_dhcp4, isc_dhcp6, dibbler
# Not all of those are functional yet. This is essentailly
# name of the subdirectory in lettuce/features/serversupport
SERVER_TYPE = ""

# This defines protocol family. Currently two are
# supported: v4 (which means DHCPv4) and v6 (which means DHCPv6)
PROTO = ""

# Parameters specific to DHCPv4 tests
SRV4_ADDR = ""

# This specifies relay agent address. Leave this as 0.0.0.0 if you don't want
# to test relayed traffic.
REL4_ADDR = "0.0.0.0"

# This is a value client will set giaddr field to. Leave it as 0.0.0.0 if you
# don't want to test relays
GIADDR4 = "0.0.0.0"

# defines client MAC (used for DUID generation)
CLI_MAC = "00:02:03:04:05:06"

# For all servers, choose ethernet interface on which server will be configured
# to listen and respond.
SERVER_IFACE = ""

# In order to make sure we start all tests with a 'clean' environment,
# We perform a number of initialization steps, like restoring configuration
# files, and removing generated data files.

# This approach may not scale; if so we should probably provide specific
# initialization steps for scenarios. But until that is shown to be a problem,
# It will keep the scenarios cleaner.

# This is a list of files that are freshly copied before each scenario
# The first element is the original, the second is the target that will be
# used by the tests that need them
copylist = [ ]

# This is a list of files that, if present, will be removed before each scenario
removelist = [ ]

# When waiting for output data of a running process, use OUTPUT_WAIT_INTERVAL
# as the interval in which to check again if it has not been found yet.
# If we have waited OUTPUT_WAIT_MAX_INTERVALS times, we will abort with an
# error (so as not to hang indefinitely). Values are counted in seconds.
OUTPUT_WAIT_INTERVAL = 3
OUTPUT_WAIT_MAX_INTERVALS = 5

# When Forge sends a packet, it typically awaits for the server to respond.
# Server typically does that promptly, but during debugging it is benefical for
# the the test to wait a long time. If test concludes too early, it will remove
# the configuration and kill the server (while the debugging still taking place)
PACKET_WAIT_INTERVAL = 1

# scope link server address for testing unicast messages 
# Address 3000:: is strongly recommended for global address. Most tests are using pool
# 3000::1-3000::ffff in this case recommended address will not cover any address form
# server pool (what could cause some tests to fail)
SRV_IPV6_ADDR_GLOBAL = ""
SRV_IPV6_ADDR_LINK_LOCAL = ""

# Defines name of the DUT-facing network interface
IFACE = ""

# If you wont to build tests history in history.html set HISTORY on True if not, 
# on False but for more detailed information about tests, use --with_xunit option
# when starting run_test.py
HISTORY = False

# Also you can save separate .pcap file of every test. In default it's disabled 
# If you recieve error tcpdump: <file name>: Permission denied
# please use command as a root: aa-complain /usr/sbin/tcpdump 
TCPDUMP = False 

# If your tcpdump is installed in different location place that in TCPDUMP_INSTALL_DIR
# otherwise leave it blank
TCPDUMP_INSTALL_DIR = ""

# Also we can decide to keep main configuration file in tests_results.
SAVE_CONFIG_FILE = False
 
# Auto archive it's feature that automatically create tar archive containing 
# folder 'tests_results' and history.html (if created). Default disabled.
AUTO_ARCHIVE = False
  
# =============== SSH ===============

# This are required management information about device under test (the one that
# tested server will be running on) root privileges are required! So edit sudoers
# file, or use root account.
# ip address and port. ssh port default 22
MGMT_ADDRESS = ""
MGMT_USERNAME = ""
MGMT_PASSWORD = ""


# =============== Kea ===============
# Specifies path to the server installation directory on DUT. This must
# point to root directory of server installation and must end with /.
# The framework appends subdirectories to this path to run applications.
# For example, it appends "bin/" to obtain path to the bindctl.
SERVER_INSTALL_DIR = "/usr/local/"

# Copy logs file, different file for each test.
# WARRNING: this produce really big amount of data!
# Default - False
SAVE_BIND_LOGS = False

# Also we can decide which logging type choose, logging lvl,
# and BIND10 module type 
# for more accurate information please read BIND10 Guide, Chapter 21. Logging

# Allowed values for BINDX: FATAL, ERROR, WARN, INFO, DEBUG.
BIND_LOG_TYPE = "INFO"

# Log level applies to debuglevel in BINDX. Allowed values: 0...99
BIND_LOG_LVL = 0

# This corresponds to Logging/loggers[X]/name field. Leave this as "*" if you
# want every BIND module to log something.
BIND_MODULE = ""

# =============== DIBBLER ================
DIBBLER_INSTALL_DIR = ""

# =============== ISC-DHCP ================
# Save leases file in tests result folder
SAVE_LEASES = False
