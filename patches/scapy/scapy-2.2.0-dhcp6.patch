--- scapy/layers/dhcp6.py	2014-05-22 16:05:47.659696949 +0200
+++ scapy/layers/dhcp6.py	2014-05-22 16:07:06.711698231 +0200
@@ -296,10 +296,9 @@
     fields_desc = [ ShortEnumField("optcode", 5, dhcp6opts), 
                     FieldLenField("optlen", None, length_of="iaaddropts",
                                   fmt="!H", adjust = lambda pkt,x: x+24),
-                    IP6Field("addr", "::"),
+                    IP6Field("address", "::"),
                     IntField("preflft", 0),
                     IntField("validlft", 0),
-                    XIntField("iaid", None),
                     StrLenField("iaaddropts", "",
                                 length_from  = lambda pkt: pkt.optlen - 24) ]
     def guess_payload_class(self, payload):
@@ -334,7 +333,7 @@
                     XIntField("iaid", None),
                     IntField("T1", None),
                     IntField("T2", None),
-                    _IANAOptField("ianaopts", [], DHCP6OptIAAddress,
+                    _IANAOptField("ianaopts", [], _DHCP6OptGuessPayload,
                                   length_from = lambda pkt: pkt.optlen-12) ]
 
 class _IATAOptField(_IANAOptField):
@@ -346,7 +345,7 @@
                     FieldLenField("optlen", None, length_of="iataopts",
                                   fmt="!H", adjust = lambda pkt,x: x+4),
                     XIntField("iaid", None),
-                    _IATAOptField("iataopts", [], DHCP6OptIAAddress,
+                    _IATAOptField("iataopts", [], _DHCP6OptGuessPayload,
                                   length_from = lambda pkt: pkt.optlen-4) ]
 
 
@@ -716,23 +715,28 @@
     name = "DHCP6 Option - IA_PD Prefix option"
     fields_desc = [ ShortEnumField("optcode", 26, dhcp6opts),
                     FieldLenField("optlen", None, length_of="iaprefopts",
-                                  adjust = lambda pkt,x: x+26),
+                                  adjust = lambda pkt,x: x+25),
                     IntField("preflft", 0),
                     IntField("validlft", 0),
-                    ByteField("plen", 48),  # TODO: Challenge that default value
-                    IP6Field("prefix", "2001:db8::"), # At least, global and won't hurt
+                    ByteField("plen", 0),  # TODO: Challenge that default value
+                    IP6Field("prefix", "::"), # At least, global and won't hurt
                     StrLenField("iaprefopts", "",
-                                length_from = lambda pkt: pkt.optlen-26) ]
+                                length_from = lambda pkt: pkt.optlen-25) ]
+    def guess_payload_class(self, payload):
+        return Padding
+
+class _IAPDOptField(_IANAOptField):	
+	pass
 
 class DHCP6OptIA_PD(_DHCP6OptGuessPayload):                       #RFC3633
     name = "DHCP6 Option - Identity Association for Prefix Delegation"
     fields_desc = [ ShortEnumField("optcode", 25, dhcp6opts),
                     FieldLenField("optlen", None, length_of="iapdopt",
-                                  adjust = lambda pkt,x: x+12),
-                    IntField("iaid", 0),
-                    IntField("T1", 0),
-                    IntField("T2", 0),
-                    PacketListField("iapdopt", [], DHCP6OptIAPrefix,
+                                  fmt="!H", adjust = lambda pkt,x: x+12),
+                    IntField("iaid", None),
+                    IntField("T1", None),
+                    IntField("T2", None),
+                    _IAPDOptField("iapdopt", [],_DHCP6OptGuessPayload,
                                     length_from = lambda pkt: pkt.optlen-12) ]
 
 class DHCP6OptNISServers(_DHCP6OptGuessPayload):                 #RFC3898
@@ -1057,7 +1061,10 @@
     msgtype = 7
     
     def answers(self, other):
-        return (isinstance(other, DHCP6_InfoRequest) and
+
+        types = (DHCP6_Solicit, DHCP6_InfoRequest, DHCP6_Confirm, DHCP6_Rebind, DHCP6_Decline, DHCP6_Request, DHCP6_Release, DHCP6_Renew)
+
+        return (isinstance(other, types) and
                 self.trid == other.trid)
 
 #####################################################################
@@ -1119,9 +1126,6 @@
     name = "DHCPv6 Information Request Message"    
     msgtype = 11 
     
-    def hashret(self): 
-        return struct.pack("!I", self.trid)[1:3]
-
 #####################################################################
 # sent between Relay Agents and Servers 
 #
@@ -1169,7 +1173,7 @@
         return inet_pton(socket.AF_INET6, self.peeraddr)
     def answers(self, other):
         return (isinstance(other, DHCP6_RelayForward) and
-                self.count == other.count and
+                self.hopcount == other.hopcount and
                 self.linkaddr == other.linkaddr and
                 self.peeraddr == other.peeraddr )
 
